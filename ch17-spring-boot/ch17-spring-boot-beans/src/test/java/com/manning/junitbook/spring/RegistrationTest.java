package com.manning.junitbook.spring;

import com.manning.junitbook.spring.beans.TestBeans;
import com.manning.junitbook.spring.model.Passenger;
import com.manning.junitbook.spring.registration.PassengerRegistrationEvent;
import com.manning.junitbook.spring.registration.RegistrationManager;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.Import;

import static org.junit.jupiter.api.Assertions.assertTrue;

/**
 * @SpringBootTest provided by the test generated by Spring Boot. This annotation provides a few features;
 * We are using one that, search in the current test class package and its subpackages for bean definitions.
 * This way, it can discover and autowire the RegistrationManager bean
 */
@SpringBootTest
@Import(TestBeans.class) // This way, we explicitly registers the beans defined in TestBeans in the class that contains the tests.
public class RegistrationTest {

    @Autowired
    private Passenger passenger;

    @Autowired
    private RegistrationManager registrationManager;

    @Test
    void testPersonRegistration() {
        registrationManager.getApplicationContext().publishEvent(new PassengerRegistrationEvent(passenger));
        System.out.println("After registering: ");
        System.out.println(passenger);
        assertTrue(passenger.isRegistered());
    }
}
